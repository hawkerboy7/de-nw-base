@font-face {
	font-family: 'Open Sans';
	src:	url('./../fonts/opensans-light-webfont.eot');
	src:	url('./../fonts/opensans-light-webfont.eot?#iefix') format('embedded-opentype'),
			url('./../fonts/opensans-light-webfont.woff2'),
			url('./../fonts/opensans-light-webfont.woff'),
			url('./../fonts/opensans-light-webfont.ttf') format('truetype'),
			url('./../fonts/opensans-light-webfont.svg#open_sanslight') format('svg');
	font-weight: 400;
	font-style: normal;
}


// -------------------------
// Functions
// -------------------------
.no-select () {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	cursor: default;
}

.abs () { position: absolute; }
.rel () { position: relative; }
.fix () { position: fixed; }
.static () { position: static; }
.box () { box-sizing: border-box; }

.transform (@property: all;@duration: 200ms;@timing: ease;@delay: 0s) {
	transition-delay: @delay;
	transition-duration: @duration;
	transition-property: @property;
	transition-timing-function: @timing;
}

.fade-out (@duration: 200ms) {
	.transform (~"opacity, visibility", @duration);
	opacity: 1;
	visibility: visible;

	&.hide-me {
		opacity: 0;
		visibility: hidden;
	}
}

.fade-in (@duration: 200ms) {
	.transform (~"opacity, visibility", @duration);
	opacity: 0;
	visibility: hidden;

	&.show-me {
		.static;
		opacity: 1;
		visibility: visible;
	}
}

.stop-flickering () {
	// Stops elements from acting weird during css3 animations (only body or main? or all animating pages?) - NOT-TESTED-YET
	-webkit-backface-visibility: hidden;
	-webkit-perspective: 1000;
}


.improve-text () {
	// Smooth text (make them less pixel like) - NOT-TESTED-YET
	-webkit-font-smoothing: antialiased;
}

.hardware-acceleration () {
	// Allows for the gpu to render elements too(only body or main? or all animating pages?) - NOT-TESTED-YET
	-webkit-transform: translateZ(0px);
}

.hardware-acceleration2 () {
	// All methodes (untested)
	-webkit-transform: translateZ(0);
	-moz-transform: translateZ(0);
	-ms-transform: translateZ(0);
	-o-transform: translateZ(0);
	transform: translateZ(0);

	-webkit-transform: translate3d(0, 0, 0);
	-moz-transform: translate3d(0, 0, 0);
	-ms-transform: translate3d(0, 0, 0);
	transform: translate3d(0, 0, 0);

	-webkit-backface-visibility: hidden;
	-moz-backface-visibility: hidden;
	-ms-backface-visibility: hidden;
	backface-visibility: hidden;

	-webkit-perspective: 1000;
	-moz-perspective: 1000;
	-ms-perspective: 1000;
	perspective: 1000;
}

.input () {
	.transform(box-shadow);
	border: none;
	padding: 2px 10px;
	box-shadow: 0 0 2px #000;
	border-radius: 10px;
	background-color: transparent;

	&:focus {
		box-shadow: 0 0 4px #000;
	}
	&:hover {
		box-shadow: 0 0 4px @font-color;
	}
	&.warning {
		box-shadow: 0 0 4px #f80;
	}
	&.error {
		box-shadow: 0 0 4px #f00;
	}
}

.shadow (@width: 2px;@y: 0px;@x: 0px) {
	box-shadow: @y @x @width #000;
}
.shadow-inset (@width: 2px;@y: 0px;@x: 0px) {
	box-shadow: inset @y @x @width #000;
}


// -------------------------
// DOM Helper
// -------------------------
.cf {
	zoom: 1;

	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

.word-wrap {
	white-space: pre-wrap;
	white-space: -moz-pre-wrap;
	white-space: -pre-wrap;
	white-space: -o-pre-wrap;
	word-wrap: break-word;
}
.open-sans {
	font-family: 'Open Sans', Verdana, sans-serif;
}
.mono-space {
	font-family: 'Courier New', Courier, monospace;
}

.show {
	display: block !important;
}
.hide {
	display: none !important;
}


// -------------------------
// Default DOM
// -------------------------
html {
	.no-select;
	.open-sans;
	width: 100%;
	height: 100%;
	color: @font-color;
	font-size: @font-size;
}

body {
	min-height: 100%;
}

h1,h2,h3,h4,h5,h6 {
	font-weight: normal;
}

a {
	color: @link-color;
	text-decoration: none;
}

ul {
	vertical-align: middle;
	list-style: none;
}

button,
input {
	&.style {
		.box;
		.input;
		.open-sans;
		outline: 0;
		color: @font-color;

		// Remove dotted line in FireFox
		&::-moz-focus-inner {border:0;}

		&[type="file"] {
			cursor: pointer;
		}
	}
}

button {
	&.style {
		cursor: pointer;
	}
}